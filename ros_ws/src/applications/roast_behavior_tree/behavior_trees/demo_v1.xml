<?xml version="1.0"?>
<root main_tree_to_execute="MainTree">
    <!-- ////////// -->
    <BehaviorTree ID="MainTree">
        <Sequence>
            <SubTree ID="RobotNotAtHome"/>
            <Action ID="GoToHome" backup_distance="1.0" spin_angle="0.0"/>
            <Control ID="RoundRobin">
                <ReactiveSequence>
                    <Condition ID="IsThreatDetected"/>
                    <SubTree ID="ThreatTracking"/>
                </ReactiveSequence>
            </Control>
            <ReactiveFallback>
                <Condition ID="IsThreatDetected"/>
                <Sequence>
                    <SubTree ID="LookForThreat"/>
                    <SubTree ID="Patrolling"/>
                </Sequence>
            </ReactiveFallback>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="LookForThreat">
        <Sequence name="LookForThreat">
            <Action ID="CancelTrackThreat"/>
            <Action ID="Wait" wait_duration="3"/>
            <Action ID="Spin" spin_dist="3.14"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="Patrolling">
        <Sequence name="StartPatrolling">
            <Action ID="PatrolAction" patrol_type="sequential"/>
            <Action ID="Spin" spin_dist="3.14"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="RobotNotAtHome">
        <Fallback>
            <Inverter>
                <Condition ID="IsArucoDetected" image_topic="/back_oakd_camera/rgb" timeout="5"/>
            </Inverter>
            <Condition ID="IsBatteryLow" battery_topic="/battery" is_voltage="12.0" min_battery="50.0"/>
        </Fallback>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="ThreatTracking">
        <Sequence name="StartThreatTracking">
            <Action ID="CancelPatrolAction"/>
            <Action ID="TrackThreat" turn_to_threat="false"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="ActivateLedService">
            <input_port name="led_mode">Choose between different mode of development: default, booted_up, navigation_started, restart, threat, battery_low</input_port>
            <input_port name="service_name">Service name</input_port>
        </Action>
        <Action ID="BackUp">
            <input_port name="backup_dist">Distance to backup</input_port>
            <input_port name="backup_speed">Speed at which to backup</input_port>
        </Action>
        <Action ID="CancelPatrolAction"/>
        <Action ID="CancelTrackThreat"/>
        <Action ID="ClearEntireCostmap">
            <input_port name="service_name">Service name</input_port>
        </Action>
        <Action ID="ComputePathThroughPoses">
            <input_port name="goals">Destinations to plan through</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ComputePathToPose">
            <input_port name="goal">Destination to plan to</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ControllerSelector">
            <input_port name="default_controller">Default controller of the controller selector</input_port>
            <output_port name="selected_controller">Name of the selected controller received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
        </Action>
        <Decorator ID="DistanceController">
            <input_port name="distance">Distance</input_port>
        </Decorator>
        <Condition ID="DistanceTraveled">
            <input_port name="distance">Distance to check if passed</input_port>
            <input_port name="global_frame">reference frame to check in</input_port>
            <input_port name="robot_base_frame">Robot frame to check relative to global_frame</input_port>
        </Condition>
        <Action ID="FollowPath">
            <input_port default="FollowPath" name="controller_id"/>
            <input_port default="GoalChecker" name="goal_checker_id">Goal checker</input_port>
            <input_port name="path">Path to follow</input_port>
        </Action>
        <Action ID="GoToHome">
            <input_port name="backup_distance">Distance to backup</input_port>
            <input_port name="spin_angle">Spin angle in radians</input_port>
        </Action>
        <Action ID="GoalCheckerSelector">
            <input_port name="default_goal_checker">Default goal checker of the controller selector</input_port>
            <output_port name="selected_goal_checker">Name of the selected goal checker received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive goal checker selection commands</input_port>
        </Action>
        <Condition ID="GoalReached">
            <input_port name="goal">Destination</input_port>
        </Condition>
        <Condition ID="GoalUpdated"/>
        <Decorator ID="GoalUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>
        <Condition ID="InitialPoseReceived"/>
        <Condition ID="IsArucoDetected">
            <input_port name="image_topic">Image topic</input_port>
            <input_port name="timeout">Timeout</input_port>
        </Condition>
        <Condition ID="IsBatteryLow">
            <input_port name="battery_topic">Topic for battery info</input_port>
            <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
            <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
        </Condition>
        <Condition ID="IsStuck"/>
        <Condition ID="IsThreatDetected"/>
        <SubTree ID="LookForThreat"/>
        <Action ID="MoveForward">
            <input_port name="distance">Distance to move forward</input_port>
            <input_port name="speed">Speed to move forward</input_port>
        </Action>
        <Action ID="NavigateThroughPoses">
            <input_port name="goals">Goals</input_port>
        </Action>
        <Action ID="NavigateToPose">
            <input_port name="goal">Goal</input_port>
        </Action>
        <Action ID="PatrolAction">
            <input_port name="patrol_type">Patrol Type (inlowercases): sequential or random</input_port>
        </Action>
        <SubTree ID="Patrolling"/>
        <Control ID="PipelineSequence"/>
        <Action ID="PlannerSelector">
            <input_port name="default_planner">Default planner of the planner selector</input_port>
            <output_port name="selected_planner">Name of the selected planner received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
        </Action>
        <Decorator ID="RateController">
            <input_port name="hz">Rate</input_port>
        </Decorator>
        <Control ID="RecoveryNode">
            <input_port name="number_of_retries">Number of retries</input_port>
        </Control>
        <Action ID="ReinitializeGlobalLocalization"/>
        <Action ID="RemovePassedGoals">
            <input_port name="input_goals">Input goals to remove if passed</input_port>
            <output_port name="output_goals">Set of goals after removing any passed</output_port>
            <input_port name="radius">Radius tolerance on a goal to consider it passed</input_port>
        </Action>
        <SubTree ID="RobotNotAtHome"/>
        <Control ID="RoundRobin"/>
        <Action ID="SendCommandCenterMessage">
            <input_port name="level">Message Severity Level</input_port>
            <input_port name="message">Message to send</input_port>
        </Action>
        <Action ID="SendSmsMessage">
            <input_port name="frequency">SMS frequency</input_port>
            <input_port name="level">Level of the message (INFO, WARN, ERROR)</input_port>
            <input_port name="message">Message to send SMS</input_port>
        </Action>
        <Condition ID="SensorStatus"/>
        <Decorator ID="SingleTrigger"/>
        <Action ID="SpeakerAnnouncement">
            <input_port name="frequency">Speaker frequency</input_port>
            <input_port name="level">Level of the message (INFO, WARN, ERROR)</input_port>
            <input_port name="message">Message for speaker announcement</input_port>
        </Action>
        <Decorator ID="SpeedController">
            <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
            <input_port name="max_rate">Maximum rate</input_port>
            <input_port name="max_speed">Maximum speed</input_port>
            <input_port name="min_rate">Minimum rate</input_port>
            <input_port name="min_speed">Minimum speed</input_port>
        </Decorator>
        <Action ID="Spin">
            <input_port name="spin_dist">Spin distance</input_port>
        </Action>
        <Action ID="ThreatMitigationService">
            <input_port name="service_name">Service name</input_port>
            <input_port name="spray_duration">Spray duration for the threat mitigation module</input_port>
        </Action>
        <SubTree ID="ThreatTracking"/>
        <Condition ID="TimeExpired">
            <input_port name="seconds">Time to check if expired</input_port>
        </Condition>
        <Action ID="TrackThreat">
            <input_port name="turn_to_threat">Assertion to turn to threat: true or false</input_port>
        </Action>
        <Condition ID="TransformAvailable">
            <input_port name="child">Child frame for transform</input_port>
            <input_port name="parent">Parent frame for transform</input_port>
        </Condition>
        <Action ID="TruncatePath">
            <input_port name="distance">Distance before goal to truncate</input_port>
            <input_port name="input_path">Path to truncate</input_port>
            <output_port name="output_path">Truncated path to utilize</output_port>
        </Action>
        <Action ID="Wait">
            <input_port name="wait_duration">Wait time</input_port>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
